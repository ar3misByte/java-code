// factorial, prime checker, nPr and nCr + tests on ways to use them
// the factorial only works for small numbers (or else stack overflow)

import java.util.Scanner;
import java.math.*;

public class mathThings {
	static long factorial(int N) {
		if (N == 1) return 1;
		else return N * factorial(N - 1);
		
	}
	
	static boolean isPrime(int N) {
		for (int i = 2; i <= Math.sqrt(N) + 1; i++) {
			if (N % i == 0) return false;
		}
		return true;
	}
	
	static long nPr(int n, int r) { // (n!/(n-r)!)
		int perm = 1;
		for (int i = n; i > n - r; i--) {
			perm = perm * i;
		}
		return perm;
	}
	
	static long nCr(int n, int r) { // ((n!/((n-r)!r!)) or nPr/r!
		double comb = 1;
		int R = r;
		for (int i = n; i > n - r; i--) {
			comb *= (double) i / R;
			R -= 1;
		}
		return Math.round(comb);
	}
		
	
	public static void main(String[] args) {
		System.out.println(factorial(12)); // make sure to only calculate the factorial for small numbers
		System.out.println(isPrime(193));
		System.out.println(nPr(100, 3));
		System.out.println(nCr(100, 3));
		System.out.println(nCr(100, 97));
		
		int[][] A = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};
		for (int i = 0; i < A.length; i++) {
			for (int j = 0; j < A[i].length; j++) {
				System.out.print(A[i][j] + " ");
			}
		}
	}
}
